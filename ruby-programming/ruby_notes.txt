= General =
 * This works just as in Python:
foo = false
if foo: puts "yep"
end
# No output

But this differs:

foo = 0
if foo: puts "yep"
end
"yep"


= XML and HTML =
 * For building: Builder (RubyGem; http://builder.rubyforge.org/)
 * For parsing and traversing XML: REXML (stdlib; http://www.germane-software.com/software/rexml/) 
 * For parsing HTML and XML: nokogiri (http://wiki.github.com/tenderlove/nokogiri)
 * For unescaping:
require 'cgi'
unescaped = CGI::unescapeHTML(HTML_OR_XML)

= JSON =
JSON equivalent of Builder:
    # Makes it so you can use Builder templates to generate valid JSON.
    def render(opts = {}, &block)
        if opts[:to_json] then
            render :json => Hash.from_xml(render_to_string(:template => opts[:to_json], :layout => false)).to_json, :layout => false
        else
            super opts, &block
        end
    end

= Dates and times =
 * Datestamp: Date.today.to_s
 * Datetime stamp: Time.now.strftime("%Y%m%d_%H%M%S")

= CSV =
 * For writing to and reading from CSV files: http://fastercsv.rubyforge.org/classes/FasterCSV.html

= Visualization =
RailRoad (http://railroad.rubyforge.org/) is a class diagrams generator for Ruby on Rails applications. 
Note from Trevor on this: FYI: if you decide to use this to dump info about controllers, make sure that you go in and change the line where it's trying to require "app/controllers/application.rb" -- that file isn't called that anymore. It's "application_controller.rb" now instead.

= Fake values for testing =
Faker is a great Ruby gem for providing lots of fake values for common sorts of things:
Faker::Name.last_name
=> "Boehm"
Faker::Company.catch_phrase
=> "Multi-layered multi-tasking task-force"
Faker::Company.name
=> "Mitchell, Stamm and Muller"

= Chef and delayed_job =
Chef in EngineYard: https://cloud-support.engineyard.com/faqs/chef/use-chef-to-customize-your-environment
delayed_job awesomeness: http://adamfortuna.com/2009/08/17/the-amazingness-of-delayed_job-for-rails/
more: http://www.magnionlabs.com/2009/2/28/background-job-processing-in-rails-with-delayed_job
delayed_job and monit: https://cloud-support.engineyard.com/discussions/questions/230-running-delayed_job-workers-solved
delayed_job recipe: http://gist.github.com/189423
